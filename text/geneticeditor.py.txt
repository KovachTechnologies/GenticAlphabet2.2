#!/usr/bin/env python3

"""Genetic Editor GUI for GeneticAlphabet2.2."""

from PyQt5 import QtCore, QtGui, QtWidgets
from interpreter import compile_code, decompile_code, tokenize_code
from agent import Agent

class Ui_MainWindow(object):
    def __init__(self):
        self.a = Agent(family_id=0)
        self.eip_ptr = None
        self.progeny = ""

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.codeWindow = QtWidgets.QTextBrowser(self.centralwidget)
        self.codeWindow.setGeometry(QtCore.QRect(10, 10, 381, 192))
        self.codeWindow.setObjectName("codeWindow")
        self.compiledWindow = QtWidgets.QTextBrowser(self.centralwidget)
        self.compiledWindow.setGeometry(QtCore.QRect(400, 10, 381, 192))
        self.compiledWindow.setObjectName("compiledWindow")
        self.tableData = QtWidgets.QTableWidget(self.centralwidget)
        self.tableData.setGeometry(QtCore.QRect(10, 210, 771, 341))
        self.tableData.setObjectName("tableData")
        self.tableData.setColumnCount(0)
        self.tableData.setRowCount(0)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Genetic Editor"))

    def compileCode(self):
        """Compile code from codeWindow to compiledWindow."""
        code = self.codeWindow.toPlainText()
        if code == "":
            return 1
        compiled = compile_code(code.split("\n"))
        self.compiledWindow.setText(compiled)
        return 0

    def decompileCode(self):
        """Decompile code from compiledWindow to codeWindow."""
        code = self.compiledWindow.toPlainText()
        if code == "":
            return 1
        decompiled = decompile_code(code)
        self.codeWindow.setText(decompiled)
        return 0

    def loadData(self):
        """Load code from compiledWindow into tableData."""
        self.tableData.setRowCount(0)
        code = self.compiledWindow.toPlainText()
        tokens = tokenize_code(code)
        if self.a.init(code):
            self.tableData.setColumnCount(len(tokens))
            self.tableData.insertRow(self.tableData.rowCount())
            for col, token in enumerate(tokens):
                self.tableData.setItem(0, col, QtWidgets.QTableWidgetItem(token))
            self.statusbar.showMessage("Data Loaded!")
        else:
            self.statusbar.showMessage("Code not executable!")

    def loadProgenyCode(self):
        """Load progeny code into tableData."""
        self.tableData.setRowCount(0)
        code = self.progeny
        tokens = tokenize_code(code)
        if self.a.init(code):
            self.tableData.setColumnCount(len(tokens))
            self.tableData.insertRow(self.tableData.rowCount())
            for col, token in enumerate(tokens):
                self.tableData.setItem(0, col, QtWidgets.QTableWidgetItem(token))
            self.statusbar.showMessage("Data Loaded!")
        else:
            self.statusbar.showMessage("Code not executable!")

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
